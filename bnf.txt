<program>   := <funcdef>+
<funcdef>   := "fn" <ident>"(" <ident>* ")" "{" <statlist> "}"
<call_func> := <ident> "(" <funcargs> ")"
<funcargs>  := (<expr>[,])*
<statlist>  := <statement>(; <statement>)*
<statement> := <call_func>
// <block> --> {} <statlist> end
<relation> --> <expression> <rel_op> <expression>
<rel_op> --> > | < | = | <>| <= | >= |
<expression> --> <expression> <add_op> <term> | <term>
<term> --> <term> <mul_op> <factor> | <factor>
<factor> --> <literal> | "(" <expression> ")" | <funccall>
<literal> --> <ident> | <number> | <string>
<number> --> [<unary_op>] NUMBER
<string> --> "<any charactor>"
<indent> --> <latter>(<latter> | <digit>)*
<latter> --> a-zA-Z
<digit> --> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9